@page "/LineaAlbaranManagement"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Spinner

@inject ILineaAlbaranManagementService LineaAlbaranManagementService

<h3>LineaAlbaranManagement</h3>

<div>
    <SfGrid DataSource="lineaAlbaranData" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowGrouping="true" Toolbar="@toolbar">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridColumns>
            <GridColumn IsPrimaryKey="true" Field="@nameof(LineaAlbaranModel.LineaAlbaranId)"></GridColumn>
            <GridColumn Field="@nameof(LineaAlbaranModel.AlbaranLineaAlbaran)"></GridColumn>
            <GridColumn Field="@nameof(LineaAlbaranModel.LineaPedidoLineaAlbaran)"></GridColumn>
            <GridColumn Field="@nameof(LineaAlbaranModel.Cantidad)"></GridColumn>
            <GridColumn Field="@nameof(LineaAlbaranModel.Importe)"></GridColumn>
        </GridColumns>
        <SfSpinner @bind-Visible="@VisibleSpinner"></SfSpinner>
    </SfGrid>
</div>


@code {
    private List<LineaAlbaranModel>? lineaAlbaranData = null;
    private List<object> toolbar = new List<object> { "Add", "Update", "Cancel", "Search" };
    private bool VisibleSpinner { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        VisibleSpinner = true;
        lineaAlbaranData = await LineaAlbaranManagementService.GetLineaAlbaranes();
        VisibleSpinner = false;
    }

}
