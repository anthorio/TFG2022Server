@page "/UsuarioManagement"
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Spinner
@using TFG2022Server.Models
@using TFG2022Server.Services
@using TFG2022Server.Services.Contracts

@inject IUsuarioManagementService UsuarioManagementService

<h3>Usuarios</h3>

<div>
    <SfGrid @ref="SfUsuarioGrid" DataSource="UsuarioData" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowGrouping="false" Toolbar="@toolbar">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings> @* Para crear y editar, mejor en una ventan aparte *@
        <GridEvents OnActionBegin="ActionBeginHandler" OnActionComplete="ActionCompleteHandler" TValue="UsuarioModel"></GridEvents>
        <GridPageSettings PageSize="10" PageCount="5"></GridPageSettings>
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridColumns>
            <GridColumn AllowAdding="false" AllowEditing="false" IsPrimaryKey="true" Field="@nameof(UsuarioModel.UsuarioId)"></GridColumn>
            <GridColumn HeaderText="Nombre" Field="@nameof(UsuarioModel.Nombre)"></GridColumn>
            <GridColumn HeaderText="Nombre" Field="@nameof(UsuarioModel.Apellidos)"></GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.Rol)">
                <EditTemplate>
                    <SfDropDownList DataSource="rolUsuarioData" TItem="string" TValue="string"
                                    @bind-value="@((context as UsuarioModel).Rol)">
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.Email)"></GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.Contraseña)"></GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.Telefono)"></GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.Dni)"></GridColumn>
            <GridColumn Field="@nameof(UsuarioModel.FechaNacimiento)" Format="d"></GridColumn>
          @*   <GridColumn HeaderText="Operations" Width="60">
               <GridCommandColumns>
                    <GridCommandColumn Type="CommandButtonType.Edit" ButtonOption="@(new CommandButtonOptions(){ IconCss = "e-icons e-edit", CssClass ="e-flat" })"></GridCommandColumn>
                    <GridCommandColumn Type="CommandButtonType.Delete" ButtonOption="@(new CommandButtonOptions(){ IconCss = "e-icons e-delete", CssClass ="e-flat" })"></GridCommandColumn>
                    <GridCommandColumn Type="CommandButtonType.Save" ButtonOption="@(new CommandButtonOptions(){ IconCss = "e-icons e-update", CssClass ="e-flat" })"></GridCommandColumn>
                    <GridCommandColumn Type="CommandButtonType.Cancel" ButtonOption="@(new CommandButtonOptions(){ IconCss = "e-icons e-cancel-icon", CssClass ="e-flat" })"></GridCommandColumn>
                     explica cómo meter comandos personalizados aquí https://youtu.be/xO17P9LVkK0?t=9547 
                </GridCommandColumns>
            </GridColumn>*@
        </GridColumns>
        <SfSpinner @bind-Visible="@VisibleSpinner"></SfSpinner>
    </SfGrid>
</div>

@code {
    private List<UsuarioModel>? UsuarioData = null;
    private string[]? rolUsuarioData = null;
    private bool VisibleSpinner { get; set; } = false;
    private SfGrid<UsuarioModel>? SfUsuarioGrid { get; set; }


    private List<object> toolbar = new List<object> { "Add", "Edit", "Delete", "Update", "Cancel", "Search" };

    protected override async Task OnInitializedAsync()
    {
        VisibleSpinner = true;
        UsuarioData = await UsuarioManagementService.GetUsuarios();
        rolUsuarioData = UsuarioManagementService.GetRoles();
        VisibleSpinner = false;
    }

    public async void ActionBeginHandler(ActionEventArgs<UsuarioModel> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (args.Action == "Add")
            {
                await UsuarioManagementService.AddUsuario(args.Data);
            }
            else if (args.Action == "Edit")
            {
                await UsuarioManagementService.UpdateUsuario(args.Data);
            }
        }
        else if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await UsuarioManagementService.DeleteUsuario(args.Data.UsuarioId);
        }
    }
    public async void ActionCompleteHandler(ActionEventArgs<UsuarioModel> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (args.Action == "Add")
            {
                UsuarioData = await UsuarioManagementService.GetUsuarios();
                SfUsuarioGrid?.Refresh();
            }

        }
    }

}
