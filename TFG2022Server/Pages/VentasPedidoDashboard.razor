@page "/admin/VentasPedidoDashboard"

@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Layouts
@using System.Timers
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Grids

@inject ProtectedLocalStorage LocalStorage
@inject IUsuarioService UsuarioService
@inject NavigationManager NavigationManager
@inject IVentasPedidoReportService VentasPedidoReportService

<style>
    .e-dashboardlayout {
        padding: 20px;
        z-index: 0;
    }

    .e-panel {
        cursor: auto !important;
    }

    .chart-annotation {
        font-weight: bold;
        font-size: 11px;
        position: relative;
        border-radius: 3px;
        background-color: rgb(36, 133, 250, 0.2);
        padding: 5px;
        color: @annotationFontColor;
    }

        .chart-annotation::after {
            content: '';
            position: absolute;
            left: 0;
            right: 0;
            top: 100%;
            margin: 0 auto;
            width: 0;
            height: 0;
            border-top: 10px solid rgb(36, 133, 250, 0.2);
            border-left: 6px solid transparent;
            border-right: 6px solid transparent;
            z-index: 1
        }

    .title {
        font-size: 13px;
        font-weight: 500;
    }
</style>

@if (@storedUser != null && @storedUser.Rol != UsuarioService.GetRoles().Last())
{
    NavigationManager.NavigateTo("/");
}
else if (@storedUser != null)
{

    <SfTab>
        <TabItems>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="Dashboard"></TabHeader>
                </ChildContent>
                <ContentTemplate>

                    <div class="form-group row">
                        <div class="col-sm-3">
                            <SfDateRangePicker TValue="DateTime" @bind-StartDate="@SelectorMesStartValue" @bind-EndDate="@SelectorMesEndValue"></SfDateRangePicker>
                        </div>
                        <div class="col-sm-1">
                            <SfButton CssClass="btn" class="e-btn e-outline e-primary" @onclick="@updateDateCharts">Actualizar</SfButton>
                        </div>
                    </div>

                    <hr />
                    <div class="control-section">
                        <SfDashboardLayout CellSpacing="@(new double[]{15 ,15})" CellAspectRatio="0.8" Columns="8">
                            <DashboardLayoutPanels>
                                <DashboardLayoutEvents Created="LayoutCreated"></DashboardLayoutEvents>

                                <DashboardLayoutPanel Column="0" Row="0" SizeX="6" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title">Cantidad de productos vendidos</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            <SfChart @ref="chart1">
                                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                                </ChartPrimaryXAxis>
                                                <ChartSeriesCollection>
                                                    <ChartSeries DataSource="@ProductosVendidos"
                                                         XName="GroupedFieldCantidadKey"
                                                         YName="Cantidad"
                                                         Type="ChartSeriesType.Bar"></ChartSeries>
                                                </ChartSeriesCollection>
                                                <ChartTooltipSettings Header="<b>${point.tooltip}</b>" Enable="true" Shared="true"></ChartTooltipSettings>
                                            </SfChart>
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>

                                <DashboardLayoutPanel Column="0" Row="0" SizeX="2" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title">% de Familias de productos vendidos</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            <SfAccumulationChart @ref="chart2" EnableBorderOnMouseMove="false" EnableAnimation="true">
                                                <AccumulationChartTooltipSettings Header="" Format="<b>${point.x}</b><br>Productos vendidos: <b>${point.y}</b>" Enable="true"></AccumulationChartTooltipSettings>
                                                <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
                                                <AccumulationChartSeriesCollection>
                                                    <AccumulationChartSeries DataSource="@FamiliaProductosVendidos"
                                                                     XName="GroupedFieldCantidadKey" YName="Cantidad" Name="Familia"
                                                                     Radius="60%" StartAngle=30 InnerRadius="0%" ExplodeIndex="0" Explode="true" ExplodeOffset="10%">
                                                        <AccumulationDataLabelSettings Visible="true" Name="GroupedFieldCantidadKey" Position="AccumulationLabelPosition.Outside">
                                                            <AccumulationChartDataLabelFont FontWeight="600"></AccumulationChartDataLabelFont>
                                                            <AccumulationChartConnector Length="20px" Type="ConnectorType.Curve"></AccumulationChartConnector>
                                                        </AccumulationDataLabelSettings>
                                                    </AccumulationChartSeries>
                                                </AccumulationChartSeriesCollection>
                                            </SfAccumulationChart>
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>

                                <DashboardLayoutPanel Column="0" Row="2" SizeX="4" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title" style="margin-left:40%">Cantidad de veces que los productos se han vendido juntos</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            @** GRID PRODUCTOS TOGETHER **@
                                            <SfGrid @ref="chart4" DataSource="@ProductosVendidosTogether" AllowResizing="true" AllowPaging="true" AllowSorting="true" AllowFiltering="false" AllowGrouping="false" Toolbar="(new List<object> {})">
                                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
                                                <GridPageSettings PageSize="11"></GridPageSettings>
                                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                                <GridColumns>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.GroupedFieldProduct1Key)" HeaderText="Producto 1"></GridColumn>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.GroupedFieldProduct2Key)" HeaderText="Producto 2"></GridColumn>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.Cantidad)" HeaderText="Veces"></GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                            @****************************@
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>
                                <DashboardLayoutPanel Column="0" Row="2" SizeX="4" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title" style="margin-left:40%">Cantidad de veces que los productos se han vendido juntos</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            @** metodo de pago mas comun **@
                                            <SfGrid @ref="chart4" DataSource="@ProductosVendidosTogether" AllowResizing="true" AllowPaging="true" AllowSorting="true" AllowFiltering="false" AllowGrouping="false" Toolbar="(new List<object> {})">
                                                <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false"></GridEditSettings>
                                                <GridPageSettings PageSize="9"></GridPageSettings>
                                                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                                                <GridColumns>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.GroupedFieldProduct1Key)" HeaderText="Producto 1"></GridColumn>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.GroupedFieldProduct2Key)" HeaderText="Producto 2"></GridColumn>
                                                    <GridColumn Field="@nameof(GroupedFieldTogetherModel.Cantidad)" HeaderText="Veces"></GridColumn>
                                                </GridColumns>
                                            </SfGrid>
                                            @****************************@
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>
                                <DashboardLayoutPanel Column="0" Row="4" SizeX="8" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title" style="margin-left:40%">Pedidos realizados</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            <SfChart @ref="chart3" Title="">
                                                <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
                                                <ChartPrimaryXAxis LabelFormat="d MMM y" ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime">
                                                    <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                                                    <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                                </ChartPrimaryXAxis>
                                                <ChartPrimaryYAxis LabelFormat="{value}">
                                                    <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                                    <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                                                </ChartPrimaryYAxis>
                                                <ChartSeriesCollection>
                                                    <ChartSeries TooltipMappingName="Cantidad" DataSource="@NumeroPedidosDia" XName="GroupedFieldDateKey" YName="Cantidad" Name="Cantidad" ColumnSpacing="0.1" Type="ChartSeriesType.Column">
                                                        <ChartMarker>
                                                            <ChartDataLabel Visible="false" Position="Syncfusion.Blazor.Charts.LabelPosition.Top">
                                                                <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                                                            </ChartDataLabel>
                                                        </ChartMarker>
                                                    </ChartSeries>
                                                </ChartSeriesCollection>
                                                <ChartLegendSettings Visible="true" EnableHighlight="true"></ChartLegendSettings>
                                                <ChartTooltipSettings  Enable="true" Shared="true"></ChartTooltipSettings>
                                            </SfChart>
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>
                            </DashboardLayoutPanels>
                        </SfDashboardLayout>
                    </div>
                </ContentTemplate>
            </TabItem>
            <TabItem>
                <ChildContent>
                    <TabHeader Text="Información general"></TabHeader>
                </ChildContent>
                <ContentTemplate>
                    <hr />
                    <div class="control-section">
                        <SfDashboardLayout CellSpacing="@(new double[]{15 ,15})" CellAspectRatio="0.8" Columns="8">
                            <DashboardLayoutPanels>
                                <DashboardLayoutEvents Created="LayoutCreated"></DashboardLayoutEvents>

                                <DashboardLayoutPanel Column="4" Row="0" SizeX="4" SizeY="2">
                                    <HeaderTemplate>
                                        <span class="title">Cantidad / Familia Producto</span>
                                    </HeaderTemplate>
                                    <ContentTemplate>
                                        @if (isLayoutRender)
                                        {
                                            <SfAccumulationChart Title="Cantidad / Familia Producto">
                                                <AccumulationChartLegendSettings Visible="true" Position="Syncfusion.Blazor.Charts.LegendPosition.Top"></AccumulationChartLegendSettings>
                                                <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
                                                <AccumulationChartSeriesCollection>
                                                    <AccumulationChartSeries DataSource="@CantidadProductoPorFamiliaProducto"
                                                                     XName="GroupedFieldCantidadKey" YName="Cantidad"
                                                                     Radius="70%" InnerRadius="40%" Name="CantidadPorFamiliaProducto"
                                                                     Explode="true" ExplodeOffset="10%" ExplodeIndex="3">
                                                        <AccumulationDataLabelSettings Visible="true" Name="Nombre">
                                                            <AccumulationChartDataLabelFont FontWeight="600" Color="White"></AccumulationChartDataLabelFont>
                                                        </AccumulationDataLabelSettings>
                                                    </AccumulationChartSeries>
                                                </AccumulationChartSeriesCollection>
                                            </SfAccumulationChart>
                                        }
                                    </ContentTemplate>
                                </DashboardLayoutPanel>
                            </DashboardLayoutPanels>
                        </SfDashboardLayout>
                    </div>
                </ContentTemplate>
            </TabItem>
        </TabItems>
    </SfTab>
}
<style>
    ellipse[id*=_Trackball_1] {
        stroke-width: 1 !important;
        stroke: white !important;
    }

    .e-chart-focused:focus {
        outline: none !important;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>

@code {
    // Variables necesarias
    private Usuario? storedUser { get; set; }

    // Gráficos y Estadísiticas
    public DateTime SelectorMesStartValue { get; set; } = DateTime.Now;
    public DateTime SelectorMesEndValue { get; set; } = DateTime.Now;

    List<GroupedFieldCantidadModel> ProductosVendidos { get; set; }
    List<GroupedFieldCantidadModel> FamiliaProductosVendidos { get; set; }
    List<GroupedFieldTogetherModel> ProductosVendidosTogether { get; set; }
    List<GroupedFieldDateModel> NumeroPedidosDia { get; set; }

    List<GroupedFieldCantidadModel> CantidadProductoPorFamiliaProducto { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        var result = await LocalStorage.GetAsync<string>("user");
        await Task.Delay(500);
        var storedUserEmail = result.Success ? result.Value : null;
        if (storedUserEmail != null) storedUser = await UsuarioService.ReadUserbyEmail(storedUserEmail);
        await Task.Delay(500);

        // Inicializar gráficas
        await updateCharts();

        // Inicializar gráficas generales ( no cambian )
        CantidadProductoPorFamiliaProducto = await VentasPedidoReportService.GetCantidadPorFamiliaProducto();

    }

    private bool isLayoutRender;
    private static Timer timer;
    SfChart chart1;
    SfAccumulationChart chart2;
    SfChart chart3;
    SfGrid<GroupedFieldTogetherModel>? chart4;


    private string[] palettes = new string[] { "#61EFCD", "#CDDE1F", "#FEC200", "#CA765A", "#2485FA", "#F57D7D", "#C152D2",
    "#8854D9", "#3D4EB8", "#00BCD7","#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5", "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300" };
    private string annotationFontColor;

    public void LayoutCreated()
    {
        isLayoutRender = true;
        timer = new Timer(1000);
        timer.Elapsed += RefreshCharts;
        timer.AutoReset = true;
        timer.Enabled = true;
    }
    private void RefreshCharts(Object source, ElapsedEventArgs e)
    {
        if (chart1 == null && chart2 == null && chart3 == null)
            return;
        chart1.RefreshAsync(false);
        chart2.Refresh(false);
        chart3.RefreshAsync(false);

        timer.Enabled = false;
        timer.AutoReset = false;
    }

    private async Task updateDateCharts()
    {
        await updateCharts();

        await chart1.RefreshAsync();
        chart2.Refresh();
        await chart3.RefreshAsync();
        chart4?.Refresh();

        // await all the charts refresh
    }

    private async Task updateCharts()
    {
        SelectorMesEndValue = SelectorMesEndValue.AddHours(23).AddMinutes(59).AddSeconds(59);
        ProductosVendidos = await VentasPedidoReportService.GetProductosVendidosPorTiempoData(SelectorMesStartValue, SelectorMesEndValue);  // en el servicio se hace la comprobación de si es el mismo día o no
        FamiliaProductosVendidos = await VentasPedidoReportService.GetFamiliaProductosVendidosPorTiempoData(SelectorMesStartValue, SelectorMesEndValue);  // en el servicio se hace la comprobación de si es el mismo día o no
        ProductosVendidosTogether = await VentasPedidoReportService.GetProductosVendidosJuntosPorTiempoData(SelectorMesStartValue, SelectorMesEndValue);
        NumeroPedidosDia = await VentasPedidoReportService.GetPedidosPorTiempoData(SelectorMesStartValue, SelectorMesEndValue);

    }
}