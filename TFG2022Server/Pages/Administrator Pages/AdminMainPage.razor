@page "/admin/index"

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Syncfusion.Blazor.Buttons

@inject ProtectedLocalStorage LocalStorage
@inject IUsuarioService UsuarioService
@inject NavigationManager NavigationManager


@if (@storedUser != null && @storedUser.Rol == UsuarioService.GetRoles().First())
{
    NavigationManager.NavigateTo("/");
}
else if (@storedUser != null)
{
    <h3>AdminMainPage</h3>
    <main class="container">

        <div class="column">
            <h2>Artículos</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Productos</SfButton>
            </div>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Familias de productos</SfButton>
            </div>
        </div>
        <div class="column">
            <h2>Clientes</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Clientes</SfButton>
            </div>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Pedidos</SfButton>
            </div>
        </div>
        <div class="column">
            <h2>Proveedores</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Proveedores</SfButton>
            </div>
        </div>
        <div class="column">
            <h2>Almacén</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Inventario</SfButton>
            </div>

        </div>
        <div class="column">
            <h2>Contabilidad</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">🛒 Venta física</SfButton>
            </div>
        </div>
        <div class="column">
            <h2>Gestión</h2>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Usuarios</SfButton>
            </div>
            <div>
                <SfButton CssClass="btn" class="e-btn e-outline e-primary">Análisis y estadísticas</SfButton>
            </div>
        </div>
        
    </main>
}

<style>
    /* Basic Styling */
    html, body {
        height: 100%;
        width: 100%;
        margin: 0;
        font-family: 'Roboto', sans-serif;
    }

    .container {
        max-width: 1600px;
        margin: 0 auto;
        padding: 15px;
        display: flex;
    }
    /* Columns */
    .column {
        width: 16%;
        position: relative;
    }
    /*Buttons*/
    .btn { 
       margin-top: 5px;
  @*    border-radius: 0;    height: 24px; background-color: #007BFF; *@
        width: 90%; 
        
    } 
</style>

@code {
    private Usuario? storedUser { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await InicializarUsuario();
    }

    protected async Task InicializarUsuario()
    {
        await Task.Delay(1000);
        var result = await LocalStorage.GetAsync<string>("user");
        await Task.Delay(500);
        var storedUserEmail = result.Success ? result.Value : null;
        if (storedUserEmail != null) storedUser = await UsuarioService.ReadUserbyEmail(storedUserEmail);
    }
    protected void testF()
    {

    }
}
